#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

&sk {
    release-after-ms = <1500>;
    quick-release;
};

&caps_word {
    continue-list = <UNDERSCORE MINUS>;
    mods = <(MOD_LSFT)>;
};

&key_repeat {
    usage-pages = <HID_USAGE_KEY HID_USAGE_CONSUMER>;
};

/ {
    behaviors {
        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            bindings = <&kp>, <&kp>;
            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick-tap-ms = <0>;
            flavor = "tap-preferred";
        };

        swapapp: swapapp {
            compatible = "zmk,behavior-tri-state";
            #binding-cells = <0>;
            bindings = <&kt LGUI>, <&kp TAB>, <&kt LGUI>;
            ignored-key-positions = <0 2 16 17 18 19>;
        };

        swapwindow: swapwindow {
            compatible = "zmk,behavior-tri-state";
            #binding-cells = <0>;
            bindings = <&kt LGUI>, <&kp GRAVE>, <&kt LGUI>;
            ignored-key-positions = <1>;
        };
    };

    combos {
        compatible = "zmk,combos";

        bootloader_combo {
            timeout-ms = <50>;  // max delay between keys
            key-positions = <4 5>; 
            bindings = <&bootloader>;
        };

        capsword_combo {
            timeout-ms = <50>;  // max delay between keys
            key-positions = <14 15>; 
            bindings = <&caps_word>;
        };

        // enter_combo {
        //     timeout-ms = <50>;  // max delay between keys
        //     key-positions = <27 28>; 
        //     bindings = <&kp ENTER>;
        // };

        // backspace_combo {
        //     timeout-ms = <50>;  // max delay between keys
        //     key-positions = <26 27>; 
        //     bindings = <&kp BACKSPACE>;
        // };
    };

    macros {
        save: save {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LEFT_GUI &kp S>;
            label = "SAVE";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        Base {
            bindings = <
&kp Q  &kp Y             &kp O        &kp U        &kp MINUS      /**/  &kp J     &kp G      &kp N  &kp F    &kp K
&kp H  &kp I             &kp E        &kp A        &kp DOT        /**/  &kp P     &kp D      &kp R  &kp S    &kp L
&kp X  &kp SINGLE_QUOTE  &kp SLASH    &kp COMMA    &kp SEMICOLON  /**/  &kp B     &kp C      &kp M  &kp W    &kp V
                         &sl 2        &lt 1 T      &key_repeat    /**/  &kp BSPC  &kp SPACE  &sl 3
            >;
        };

        Nav {
            bindings = <
&trans     &swapwindow  &swapapp   &trans     &trans  /**/  &trans  &kp LC(I)  &kp LC(RBRC)  &kp LS(LC(RBRC))  &kp LC(O)
&trans     &kp LG(A)    &kp LG(S)  &kp LG(C)  &trans  /**/  &trans  &kp LEFT   &kp DOWN      &kp UP            &kp RIGHT 
&kp LG(W)  &kp LG(Z)    &kp LG(X)  &kp LG(V)  &trans  /**/  &trans  &kp BSPC   &kp ENTER     &kp ESC           &trans
                        &trans     &trans     &trans  /**/  &trans  &trans     &trans
            >;
        };

        Num {
            bindings = <
&trans    &trans     &trans    &trans     &trans  /**/  &kp N5        &kp N6    &kp N7     &kp N8   &kp N9 
&sk LALT  &sk LCTRL  &sk LGUI  &sk LSHFT  &trans  /**/  &kp N0        &kp N1    &kp N2     &kp N3   &kp N4  
&trans    &trans     &trans    &kp TAB    &trans  /**/  &kp LA(BSPC)  &kp BSPC  &kp ENTER  &kp ESC  &kp Z
                     &trans    &trans     &trans  /**/  &trans        &trans    &trans
            >;
        };

        Sym {
            bindings = <
&trans  &trans    &trans     &kp PLUS  &kp LS(MINUS)  /**/  &trans  &trans     &trans    &trans     &trans
&kp LT  &kp EXCL  &kp EQUAL  &kp GT    &trans         /**/  &trans  &sk LSHFT  &sk LGUI  &sk LCTRL  &sk LALT
&trans  &kp LBKT  &kp LPAR   &kp LBRC  &trans         /**/  &trans  &kp RBRC   &kp RPAR  &kp RBKT   &trans     
                  &trans     &trans    &trans         /**/  &trans  &trans     &trans
            >;
        };

        Win {
            bindings = <
&trans         &trans         &trans         &trans            &bootloader  /**/  &bootloader  &trans         &trans         &trans         &trans
&kp LG(LC(J))  &kp LG(LC(L))  &kp LG(LC(O))  &kp LG(LC(SEMI))  &trans       /**/  &trans       &trans         &trans         &trans         &trans
&trans         &trans         &trans         &trans            &trans       /**/  &trans       &trans         &trans         &trans         &trans
                              &trans         &trans            &trans       /**/  &trans       &trans         &trans
            >;
        };
    };
};
