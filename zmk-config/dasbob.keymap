#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/bt.h>

#define AS(keycode) &as LS(keycode) keycode     // Autoshift Preprocessor Macro

&sk {
    release-after-ms = <1000>;
    quick-release;
};

&caps_word {
    continue-list = <UNDERSCORE MINUS>;
    mods = <(MOD_LSFT)>;
};

&key_repeat {
    usage-pages = <HID_USAGE_KEY HID_USAGE_CONSUMER>;
};

/ {
    behaviors {
        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            bindings = <&kp>, <&kp>;
            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick-tap-ms = <0>;
            flavor = "tap-preferred";
        };

        as_hold: auto_shift_hold {
            compatible = "zmk,behavior-macro-one-param";  
            #binding-cells = <1>;
            bindings
                = <&macro_press &kp LSHFT>
                , <&macro_param_1to1>
                , <&macro_tap &kp MACRO_PLACEHOLDER>
                , <&macro_release &kp LSHFT>
                ;
        };

        as: auto_shift {
            compatible = "zmk,behavior-hold-tap";
            label = "AUTO_SHIFT";
            bindings = <&as_hold>, <&kp>;
            #binding-cells = <2>;
            tapping_term_ms = <200>;
            quick_tap_ms = <0>;
            flavor = "tap-preferred";
        };

        swapapp: swapapp {
            compatible = "zmk,behavior-tri-state";
            #binding-cells = <0>;
            bindings = <&kt LGUI>, <&kp TAB>, <&kt LGUI>;
            ignored-key-positions = <0 2 16 17 18 19>;
        };

        swapwin: swapwin {
            compatible = "zmk,behavior-tri-state";
            #binding-cells = <0>;
            bindings = <&kt LGUI>, <&kp GRAVE>, <&kt LGUI>;
            ignored-key-positions = <1>;
        };

        magic_key: magic_key {
            compatible = "zmk,behavior-magic-key";
            #binding-cells = <0>;
            label = "MAGIC_KEY";
        };
    };

    combos {
        compatible = "zmk,combos";

        bootloader_combo {
            timeout-ms = <50>;  // max delay between keys
            key-positions = <4 5>; 
            bindings = <&bootloader>;
        };

        capsword_combo {
            timeout-ms = <50>;  // max delay between keys
            key-positions = <14 15>; 
            bindings = <&caps_word>;
        };

        // enter_combo {
        //     timeout-ms = <50>;  // max delay between keys
        //     key-positions = <27 28>; 
        //     bindings = <&kp ENTER>;
        // };

        // backspace_combo {
        //     timeout-ms = <50>;  // max delay between keys
        //     key-positions = <26 27>; 
        //     bindings = <&kp BACKSPACE>;
        // };
    };

    macros {
        save: save {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LEFT_GUI &kp S>;
            label = "SAVE";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        Base { // 0
            bindings = <
&kp Q  &kp Y             &kp O        &kp U        &kp UNDER  /**/  &kp J   &kp G      &kp N  &kp F    &kp K
&kp H  &kp I             &kp E        &lt 2 A      &kp DOT    /**/  &kp P   &kp D      &kp R  &kp S    &kp L
&kp X  &kp SINGLE_QUOTE  &kp SLASH    &kp COMMA    &kp SEMI   /**/  &kp B   &kp C      &kp M  &kp W    &kp V
                         &sl 5        &lt 1 T      &sl 4      /**/  &sl 4   &kp SPACE  &sl 3
            >;
        };

        Nav { // 1
            bindings = <
&trans     &swapwin   &swapapp   &trans     &trans  /**/  &trans        &kp LC(O)  &kp LC(RBKT)  &kp LS(LC(RBKT))  &kp LC(I)
&trans     &kp LG(A)  &kp LG(S)  &kp LG(C)  &trans  /**/  &trans        &kp LEFT   &kp DOWN      &kp UP            &kp RIGHT 
&kp LG(W)  &kp LG(Z)  &kp LG(X)  &kp LG(V)  &trans  /**/  &kp LA(BSPC)  &kp BSPC   &kp ENTER     &kp ESC           &kp ESC
                      &trans     &trans     &trans  /**/  &trans        &trans     &trans
            >;
        };

        Num { // 2
            bindings = <
&trans    &trans     &trans       &trans     &trans  /**/  &kp MINUS AS(N7)  AS(N8)  AS(N9)  &kp SLASH
&sk LALT  &sk LCTRL  &sk LGUI     &sk LSHFT  &trans  /**/  &kp PLUS  AS(N4)  AS(N5)  AS(N6)  &kp ASTERISK
&trans    &trans     &kp LS(TAB)  &kp TAB    &trans  /**/  &kp N0    AS(N1)  AS(N2)  AS(N3)  &kp COMMA
                     &trans       &trans     &trans  /**/  &trans    &trans  &trans
            >;
        };

        Sym { // 3
            bindings = <
&kp GRAVE  &kp BSLH  &kp AMPS   &kp PIPE   &kp MINUS     /**/  &trans  &trans     &trans    &trans     &trans
&kp LT     &kp EXCL  &kp EQUAL  &kp GT     &kp PLUS      /**/  &trans  &sk LSHFT  &sk LGUI  &sk LCTRL  &sk LALT
&trans     &kp LBKT  &kp LPAR   &kp LBRC   &kp LS(SEMI)  /**/  &trans  &kp RBRC   &kp RPAR  &kp RBKT   &trans     
                     &sl 6      &trans     &trans        /**/  &trans  &trans     &trans
            >;
        };

        Win { // 4
            bindings = <
&trans         &trans         &trans         &trans            &bootloader  /**/  &bootloader  &trans  &trans  &trans  &trans
&kp LG(LC(J))  &kp LG(LC(L))  &kp LG(LC(O))  &kp LG(LC(SEMI))  &trans       /**/  &trans       &trans  &trans  &trans  &trans
&trans         &trans         &trans         &trans            &trans       /**/  &trans       &trans  &trans  &trans  &trans
                              &trans         &trans            &trans       /**/  &trans       &trans  &trans
            >;
        };

        Control { // 5
            bindings = <
&trans    &trans     &trans       &trans     &trans  /**/  &trans        &kp LC(O)  &kp LC(RBKT)  &kp LS(LC(RBKT))  &kp LC(I)
&sk LALT  &sk LCTRL  &sk LGUI     &sk LSHFT  &trans  /**/  &kp Z         &kp LEFT   &kp DOWN      &kp UP            &kp RIGHT 
&trans    &trans     &kp LS(TAB)  &kp TAB    &trans  /**/  &kp LA(BSPC)  &kp BSPC   &kp ENTER     &kp ESC           &kp ESC
                     &trans       &trans     &trans  /**/  &trans        &trans     &sl 6
            >;
        };

        Media { // 6
            bindings = <
&trans  &trans        &trans            &trans        &bootloader  /**/  &bootloader  &bt BT_CLR  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2
&trans  &kp K_PREV    &kp K_PLAY_PAUSE  &kp K_NEXT    &trans       /**/  &trans       &trans      &trans        &trans        &trans
&trans  &kp K_VOL_DN  &kp K_MUTE        &kp K_VOL_UP  &trans       /**/  &trans       &trans      &trans        &trans        &trans
                      &sl 6             &trans        &trans       /**/  &trans       &trans      &sl 6
            >;
        };

        Empty { // 7
            bindings = <
&trans  &trans  &trans  &trans  &trans  /**/  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  /**/  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  /**/  &trans  &trans  &trans  &trans  &trans
                &trans  &trans  &trans  /**/  &trans  &trans  &trans 
            >;  
        };
    };
};
